---
title: "Homework 2- Correlating like a Data Master"
author: Riyanshi Bohra
format: html
editor: visual
---

# Homework 2-

# Correlating like a Data Master

# Setting up

```{r}
options(digits = 2)

if (!require(pacman))
  install.packages("pacman")

# Installing BiocManageR
if (!require(BiocManager))
  install.packages("BiocManager")

pacman::p_load(
       dlookr,
       formattable,
       GGally,
       ggdist,
       ggpubr,
       ggridges,
       here,
       tidyverse)

# Set global ggplot() theme
theme_set(theme_pubclean(base_size = 12)) 

theme_update(axis.title = element_text(hjust = 1))

theme_update(axis.ticks = element_blank()) 

theme_update(legend.key = element_blank())
```

## Loading the Tornados dataset

```{r}
#Load the 'tornados.csv' dataset
dataset <- read.csv("/Users/riyanshibohra/Desktop/tornados.csv") 
```

# Diagnosing the data

```{r}
# Display the first few rows of the dataset to get an overview
dataset |>
  head() |>
  formattable()
```

# Describing and Visualizing Correlations

## Table of correlations: Numeric variables

```{r}
correlate(dataset) |>
  formattable()

# The pairwise correlation matrix offers insights into linear relationships between numeric attributes in the tornados dataset. Values close to 1 or -1 indicate strong positive or negative correlations, respectively, while values near 0 suggest weak or no linear correlation.
```

## Correlation matrix: Numerical variables

```{r}
dataset |>
plot_correlate()

# The heatmap reveals varying degrees of correlation between numeric attributes in the tornado dataset. While several variables exhibit minimal correlation (near zero values), some pairs, like ns and sn, show strong negative correlations, and others, like inj and fat, display strong positive correlations.
```

## Visualize Correlations within Groups

```{r}

# Grouping by number of states(ns) affected by this tornado. 1, 2, or 3.
dataset |>
  group_by(ns) |>
  plot_correlate()

#  While many coefficients are relatively low, suggesting weak correlations, certain pairs, like inj and fat, display notable positive correlations
```

## Using ggpairs()

```{r}
# Define the Okabe-Ito colors
#OkabeItoColors <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")

#dataset |> 
 # dplyr::select(st, len, wid) |>
  #ggpairs(aes(color = st, alpha = 0.5)) +
 # theme(strip.background = element_blank()) + 
  #scale_fill_OkabeIto() +
  #scale_color_OkabeIto()
#The categorical column in this dataset has too many categories which is why this code is giving error saying: Column 'st' has more levels (53) than the threshold (15) allowed. #Possible options to deal with this is:
#1. Increase the cardinality_threshold Parameter. But according to the error message this will produce long processing times
#2. Reduce the Cardinality of 'st' Column. We can't removes categories from the column because that would give us the wrong analysis. 
#3. Convert to Numeric. But this function doesn't work for numeric data
```

# Visualizing relationship based on the Target Variable

## Numerical Target Variables: Numerical predictor variable

```{r}
# Removing NA values
dataset.noNA <- dataset |> 
  drop_na()
```

```{r}
# The target variable
num <- target_by(dataset.noNA, loss)

```

```{r}
# Relating the predictor variable and target variable
num_num <- relate(num, mag)

# Summary of the regression analysis 
summary(num_num)
```

```{r}
# Plotting the linear relationship
plot(num_num)

# There seems to be a general trend indicating that as the magnitude of tornados increases, the associated loss tends to be higher.
```

## Numerical Target Variables: Categorical predictor variable

```{r}
# The target variable
num <- target_by(dataset, loss) 
```

```{r}

  num$tz <- as.factor(num$tz)

# Relating the predictor variable and the target variable
num_cat <- relate(num, tz)

# Summary of the ANOVA analysis \
summary(num_cat)
```

```{r}
#Plotting the graph
plot(num_cat) + 
  theme(axis.text.x = element_blank())

#The loss distributions differ noticeably across tz.
```

## Categorical Target Variable: Numerical predictor variable

```{r}
# The categorical predictor variable that we want
categ <- target_by(dataset, tz)

# Relating the variable of interest to the numerical target variable
cat_num <- relate(categ, wid)

# Summary of descriptive statistics
summary(cat_num)
```

```{r}
#Plotting

plot(cat_num) 

#The plot illustrates the distribution of tornado widths (wid) across various time zones (t).Each color represents the distribution of widths in a specific time zone 
```

## Categorical Target Variable: Categorical predictor variable

```{r}
# Creating new categorical column
cat_dataset <- dataset |>
  select(wid, tz) |>
  drop_na() |>
  mutate(HighLWP = ifelse(
    wid > (mean(wid + sd(wid))), 
                          "Yes", 
                          "No"))

# New dataset 
cat_dataset |>
  head() |>
  formattable()
```

```{r}
# The categorical predictor variable that we want
categ <- target_by(cat_dataset, HighLWP)

# Relating the variable of interest to the categorical target variable
cat_cat <- relate(categ, tz)

# Summary of the Chi-square test for Independence
summary(cat_cat)
```

```{r}
#Plotting
plot(cat_cat)

#The mosaic plot illuminates the distribution of "HighLWP" values across various time zones
```
